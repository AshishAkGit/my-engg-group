{"version":3,"sources":["components/Navigation.js","components/Footer.js","components/Home.js","components/About.js","components/Owners.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","location","pathname","value","language","onChange","e","handleSetLanguage","target","Footer","Home","content","English","title","description","German","src","alt","opts","height","width","playerVars","autoplay","_onReady","event","pauseVideo","About","class","videoId","onReady","contactDetails","img","designation","name","address","phone","email","Owners","map","item","index","key","Contact","storeLanguageInLocalStorage","localStorage","setItem","App","languageStoredInLocalStorage","getItem","useState","setLanguage","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7f73f1e3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\n\r\nconst Navigation=(props)=> {\r\n  \r\n  return (\r\n    <div className=\"navigation\">\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/my-engg-group/\">\r\n            Engineering Group Website\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarResponsive\"\r\n            aria-controls=\"navbarResponsive\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>     \r\n          <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li\r\n                className={`nav-item  ${\r\n                  props.location.pathname === \"/my-engg-group/\" ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <Link className=\"nav-link\" to=\"/my-engg-group/\">\r\n                  Home\r\n                  <span className=\"sr-only\">(current)</span>\r\n                </Link>\r\n              </li>\r\n              <li\r\n                className={`nav-item  ${\r\n                  props.location.pathname === \"/my-engg-group/about\" ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <Link className=\"nav-link\" to=\"/my-engg-group/about\">\r\n                  About\r\n                </Link>\r\n              </li>\r\n              <li\r\n                className={`nav-item  ${\r\n                  props.location.pathname === \"/my-engg-group/contact\" ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <Link className=\"nav-link\" to=\"/my-engg-group/contact\">\r\n                  Contact\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"language-select\">\r\n          <select\r\n            className=\"custom-select\"\r\n            value={props.language}\r\n            onChange={e => props.handleSetLanguage(e.target.value)}\r\n          >\r\n            <option value=\"English\">English</option>\r\n            <option value=\"German\">German</option>\r\n          </select>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Navigation);\r\n","import React from 'react'\r\nconst Footer=(props)=> {\r\n    return (\r\n      <div className=\"footer\">\r\n        <footer className=\"py-3 bg-dark fixed-bottom\">\r\n          <div className=\"container\">\r\n            <p className=\"m-0 text-center text-white\">\r\n              Copyright &copy; Engineering Group 2020\r\n            </p>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Footer;","import React from 'react'\r\n\r\nconst Home=(props)=> {\r\n  let content={\r\n    English:{\r\n      title:\"Home\",\r\n      description:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"\r\n    },\r\n    German:{\r\n      title:\"Zuhause\",\r\n      description:\"Lorem Ipsum ist einfach ein Dummy-Text der Druck- und Satzindustrie. Lorem Ipsum ist seit dem 16. Jahrhundert der Standard-Dummy-Text der Branche, als ein unbekannter Drucker eine Galeere vom Typ nahm und sie zu einem Musterbuch verschlüsselte.\"  \r\n    }\r\n  };\r\n   props.language === \"German\" ? (content=content.German) : (content=content.English)\r\n    return (\r\n      <div className=\"home\">\r\n        <div className=\"container\">\r\n          <div className=\"row align-items-center my-5\">\r\n            <div className=\"col-lg-7\">\r\n              <img\r\n                className=\"img-fluid rounded mb-4 mb-lg-0\"\r\n                src=\"./images/engg-grp-img1.jpeg\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-5\">\r\n              <h1 className=\"font-weight-light\">{content.title}</h1>\r\n              <p>\r\n                 {content.description}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Home\r\n  ","import React from \"react\";\r\nimport YouTube from 'react-youtube';\r\n\r\nconst opts = {\r\n    height: '390',\r\n    width: '640',\r\n    playerVars: {      \r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const _onReady=(event)=>{\r\n    event.target.pauseVideo()\r\n  }\r\nconst About=(props)=> {\r\n  let content={\r\n    English:{\r\n      title:\"About\",\r\n      description:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"\r\n    },\r\n    German:{\r\n      title:\"Über\",\r\n      description:\"Lorem Ipsum ist einfach ein Dummy-Text der Druck- und Satzindustrie. Lorem Ipsum ist seit dem 16. Jahrhundert der Standard-Dummy-Text der Branche, als ein unbekannter Drucker eine Galeere vom Typ nahm und sie zu einem Musterbuch verschlüsselte.\"  \r\n    }\r\n  };\r\n  props.language ===\"German\" ? (content = content.German) : (content = content.English)\r\n  \r\n  return (\r\n    <div className=\"about\">\r\n      <div class=\"container\">\r\n        <div class=\"row align-items-center my-5\">\r\n          <div class=\"col-lg-7\">\r\n          <YouTube videoId=\"98DXe3uKwfc\" opts={opts} onReady={_onReady} />\r\n          </div>\r\n          <div class=\"col-lg-5\">\r\n            <h1 class=\"font-weight-light\">{content.title}</h1>\r\n            <p>\r\n             {content.description}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default About","import React from 'react'\r\n\r\nconst contactDetails=[\r\n    {\r\n    img:'./images/engg-grp-img2.jpeg',\r\n    designation:'Manager',\r\n    name:'Parikshit Karmarkar',\r\n    address:'Talegaon MIDC',\r\n    phone:'91-20-6455000',\r\n    email:'parikshit.karmarkar@abc.com'\r\n}\r\n]\r\nconst Owners=()=>{\r\nreturn( \r\n     contactDetails.map((item,index)=>(\r\n        <div className=\"row align-items-center my-5\" key={index}>\r\n        <div className=\"col-lg-4\" >\r\n          <img\r\n            className=\"img-fluid rounded mb-4 mb-lg-0\"\r\n            src={item.img}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n          <>\r\n           <p><strong>{item.name}</strong></p>\r\n           <p>{item.designation}</p>\r\n           <p>{item.address}</p>\r\n           <p>{item.phone}</p>\r\n           <p>{item.email}</p>\r\n          </>\r\n        </div>\r\n      </div>\r\n    ))\r\n )\r\n}\r\nexport default Owners;","import React from \"react\";\r\nimport Owners from './Owners'\r\n\r\nconst Contact=(props)=> {\r\n  let content={\r\n    English:{\r\n      title:\"Contact Details\"\r\n    },\r\n    German:{\r\n      title:\"Kontakt details\"\r\n    }\r\n  };\r\n  props.language === \"German\" ? (content=content.German) : (content=content.English)\r\n  return (\r\n    <div className=\"contact\">\r\n        <h2>{content.title} </h2>\r\n      <div class=\"container\">\r\n          <Owners/>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Contact","import React,{useState} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Navigation,Footer, Home, About, Contact } from \"./components\";\nimport './App.css';\n\nconst App=()=> {\n  let languageStoredInLocalStorage = localStorage.getItem(\"language\"); \n  let [language, setLanguage] = useState(\n    languageStoredInLocalStorage ? languageStoredInLocalStorage : \"English\"\n  );\n \n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation \n          language={language} \n          handleSetLanguage={language=>{\n            setLanguage(language);\n            storeLanguageInLocalStorage(language);\n          }}\n            />           \n        <Switch>\n          <Route path=\"/my-engg-group/\" exact component={() => <Home language={language}/>} />\n          <Route path=\"/my-engg-group/about\" exact component={() => <About language={language} />} />\n          <Route path=\"/my-engg-group/contact\" exact component={() => <Contact language={language}/>} />\n        </Switch>\n        <Footer language={language} />\n      </Router>\n    </div>\n  );\n}\n\nconst storeLanguageInLocalStorage=(language)=> {\n  localStorage.setItem(\"language\", language);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}